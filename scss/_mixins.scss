
// _mixins.scss
// _mixins.scss

// Flex Center Mixin
@use 'sass:math';
@mixin flexbox($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Typography mixin for text styles
@mixin typography($size, $weight, $color) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: 1.5;
}

// Responsive Flexbox for small screens
@mixin flex-responsive {
  @media (max-width: 768px) {
      flex-direction: column;
      align-items: center;
      text-align: center;
  }
}
@mixin flex-center($direction: row) {
    display: flex;
    flex-direction: $direction;
    justify-content: center;
    align-items: center;
  }
@mixin button($bg-color, $text-color) {
    background-color: $bg-color;
    color: $text-color;
    padding: $base-spacing / 2 $base-spacing;
    border: none;
    border-radius: 4px;
    font-family: $font-stack;
    font-size: 16px;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    text-align: center;
    transition: background-color 0.3s ease;
  
    &:hover {
      background-color: darken($bg-color, 10%);
    }
  }


  @mixin grid-layout($columns) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: math.div($base-spacing, 2); // Adjust grid gap
}

  @mixin responsive-grid($columns) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    grid-gap: $base-spacing;
  
    @media (max-width: 1024px) {
      grid-template-columns: repeat(2, 1fr);
    }
  
    @media (max-width: 768px) {
      grid-template-columns: 1fr;
    }
  }

  @mixin transition($properties: all, $duration: 0.3s, $timing-function: ease-in-out) {
    transition: $properties $duration $timing-function;
  }
  
  
  @mixin typography($size: 16px, $weight: normal, $line-height: 1.5, $color: $text-color) {
    font-size: $size;
    font-weight: $weight;
    line-height: $line-height;
    color: $color;
    font-family: $font-stack;
  }

  // _mixins.scss

@mixin button($bg-color, $text-color) {
    background-color: $bg-color;
    color: $text-color;
    padding: $base-spacing / 2 $base-spacing;
    border: none;
    border-radius: 4px;
    font-family: $font-stack;
    font-size: 16px;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    text-align: center;
    transition: background-color 0.3s ease;
  
    &:hover {
      background-color: darken($bg-color, 10%);
    }
  }
  
  @mixin flex-center($justify: center, $align: center, $direction: row) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
  }
  
  @mixin transition($properties: all, $duration: 0.3s, $timing-function: ease-in-out) {
    transition: $properties $duration $timing-function;
  }
  
  @mixin respond($breakpoint) {
    @if $breakpoint == 'small' {
      @media (max-width: 600px) { @content; }
    } @else if $breakpoint == 'medium' {
      @media (max-width: 900px) { @content; }
    } @else if $breakpoint == 'large' {
      @media (max-width: 1200px) { @content; }
    }
  }

  @mixin typography($size: 16px, $weight: normal, $line-height: 1.5, $color: $text-color) {
    font-size: $size;
    font-weight: $weight;
    line-height: $line-height;
    color: $color;
  }